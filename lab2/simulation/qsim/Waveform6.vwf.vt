// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/21/2020 00:23:45"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Lab2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Lab2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK;
reg DIN0;
reg DIN1;
reg FETCH;
reg LDSBR;
reg SAR0;
reg SAR1;
reg Select;
reg Select1;
reg Select2;
reg STORE;
// wires                                               
wire Q00;
wire Q01;
wire Q02;
wire Q03;
wire Q10;
wire Q11;
wire Q12;
wire Q13;
wire QA1;
wire QA2;
wire QB1;
wire QB2;
wire QC1;
wire QC2;
wire SBR0;
wire SBR1;

// assign statements (if any)                          
Lab2 i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK(CLOCK),
	.DIN0(DIN0),
	.DIN1(DIN1),
	.FETCH(FETCH),
	.LDSBR(LDSBR),
	.Q00(Q00),
	.Q01(Q01),
	.Q02(Q02),
	.Q03(Q03),
	.Q10(Q10),
	.Q11(Q11),
	.Q12(Q12),
	.Q13(Q13),
	.QA1(QA1),
	.QA2(QA2),
	.QB1(QB1),
	.QB2(QB2),
	.QC1(QC1),
	.QC2(QC2),
	.SAR0(SAR0),
	.SAR1(SAR1),
	.SBR0(SBR0),
	.SBR1(SBR1),
	.Select(Select),
	.Select1(Select1),
	.Select2(Select2),
	.STORE(STORE)
);
initial 
begin 
#1000000 $finish;
end 

// CLOCK
always
begin
	CLOCK = 1'b0;
	CLOCK = #5000 1'b1;
	#5000;
end 

// Select
initial
begin
	Select = 1'b0;
	Select = #150000 1'b1;
	Select = #210000 1'b0;
end 

// Select1
initial
begin
	Select1 = 1'b0;
	Select1 = #150000 1'b1;
	Select1 = #100000 1'b0;
end 

// Select2
initial
begin
	Select2 = 1'b0;
	Select2 = #250000 1'b1;
	Select2 = #110000 1'b0;
end 

// DIN0
initial
begin
	DIN0 = 1'b0;
	DIN0 = #150000 1'b1;
	DIN0 = #30000 1'b0;
	DIN0 = #20000 1'b1;
	DIN0 = #30000 1'b0;
end 

// DIN1
initial
begin
	DIN1 = 1'b0;
	DIN1 = #200000 1'b1;
	DIN1 = #30000 1'b0;
end 
endmodule

